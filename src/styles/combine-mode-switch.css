/* Neumorphism Design System - Switches and Buttons */

/* Common Variables */
:root {
  --neu-hue: 220deg;
  --neu-accent-hue: 22deg;
  --neu-duration: 0.2s;
  --neu-easing: cubic-bezier(1, 0, 1, 1);
}

/* Combine Mode Switch Styles */
.combine-mode-container {
  display: flex;
  align-items: center;
  height: 3rem;
}

.combine-mode-label {
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
  user-select: none;
}

.combine-mode-label span {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.combine-switch {
  --hue: 220deg;
  --width: 4rem;
  --accent-hue: 22deg;
  --duration: 0.2s;
  --easing: cubic-bezier(1, 0, 1, 1);
  --shadow-offset: calc(var(--width) / 20);
  
  position: relative;
  cursor: pointer;
  display: flex;
  align-items: center;
  width: var(--width);
  height: calc(var(--width) / 2.5);
  border-radius: var(--width);
  box-shadow: inset 6px 6px 8px hsl(var(--hue) 20% 80%),
    inset -6px -6px 8px hsl(var(--hue) 20% 93%);
}

.combine-togglesw {
  display: none;
}

.combine-indicator {
  content: '';
  position: absolute;
  width: 40%;
  height: 60%;
  transition: all var(--duration) var(--easing);
  box-shadow: inset 0 0 2px hsl(var(--hue) 20% 15% / 60%),
    inset 0 0 3px 2px hsl(var(--hue) 20% 15% / 60%),
    inset 0 0 5px 2px hsl(var(--hue) 20% 45% / 60%);
}

.combine-indicator.left {
  --hue: var(--accent-hue);
  overflow: hidden;
  left: 10%;
  border-radius: 100px 0 0 100px;
  background: linear-gradient(180deg, 
    hsl(calc(var(--accent-hue) + 20deg) 95% 80%) 10%, 
    hsl(calc(var(--accent-hue) + 20deg) 100% 60%) 30%, 
    hsl(var(--accent-hue) 90% 50%) 60%, 
    hsl(var(--accent-hue) 90% 60%) 75%, 
    hsl(var(--accent-hue) 90% 50%));
}

.combine-indicator.left::after {
  content: '';
  position: absolute;
  opacity: 0.6;
  width: 100%;
  height: 100%;
}

.combine-indicator.right {
  right: 10%;
  border-radius: 0 100px 100px 0;
  background-image: linear-gradient(180deg, 
    hsl(var(--hue) 20% 95%), 
    hsl(var(--hue) 20% 65%) 60%, 
    hsl(var(--hue) 20% 70%) 70%, 
    hsl(var(--hue) 20% 65%));
}

.combine-button {
  position: absolute;
  z-index: 1;
  width: 55%;
  height: 80%;
  left: 5%;
  border-radius: 100px;
  background-image: linear-gradient(160deg, 
    hsl(var(--hue) 20% 95%) 40%, 
    hsl(var(--hue) 20% 65%) 70%);
  transition: all var(--duration) var(--easing);
  box-shadow: 2px 2px 3px hsl(var(--hue) 18% 50% / 80%),
    2px 2px 6px hsl(var(--hue) 18% 50% / 40%),
    6px 10px 8px hsl(var(--hue) 18% 50% / 40%),
    10px 15px 15px hsl(var(--hue) 18% 50% / 60%);
}

.combine-button::before, 
.combine-button::after {
  content: '';
  position: absolute;
  top: 10%;
  width: 41%;
  height: 80%;
  border-radius: 100%;
}

.combine-button::before {
  left: 5%;
  box-shadow: inset 1px 1px 2px hsl(var(--hue) 20% 85%);
  background-image: linear-gradient(-50deg, 
    hsl(var(--hue) 20% 95%) 20%, 
    hsl(var(--hue) 20% 85%) 80%);
}

.combine-button::after {
  right: 5%;
  box-shadow: inset 1px 1px 3px hsl(var(--hue) 20% 70%);
  background-image: linear-gradient(-50deg, 
    hsl(var(--hue) 20% 95%) 20%, 
    hsl(var(--hue) 20% 75%) 80%);
}

/* Checked state */
.combine-togglesw:checked ~ .combine-button {
  left: 40%;
}

/* Active/Inactive state visual feedback */
.combine-togglesw:not(:checked) ~ .combine-indicator.left,
.combine-togglesw:checked ~ .combine-indicator.right {
  box-shadow: inset 0 0 5px hsl(var(--hue) 20% 15% / 100%),
    inset 10px 10px 8px hsl(var(--hue) 20% 15% / 100%),
    inset 10px 10px 10px hsl(var(--hue) 20% 45% / 100%);
}

/* Hover effect */
.combine-switch:hover .combine-button {
  box-shadow: 3px 3px 4px hsl(var(--hue) 18% 50% / 80%),
    3px 3px 8px hsl(var(--hue) 18% 50% / 40%),
    8px 12px 10px hsl(var(--hue) 18% 50% / 40%),
    12px 18px 18px hsl(var(--hue) 18% 50% / 60%);
}

/* Neumorphism Buttons */
.neu-button-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 3rem;
  justify-content: space-between;
}

.neu-button {
  all: unset;
  cursor: pointer;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  position: relative;
  width: 3.5rem;
  height: 1.6rem;
  background-color: rgba(0, 0, 0, 0.75);
  box-shadow:
    -0.15em -0.15em 0.15em -0.075em rgba(5, 5, 5, 0.25),
    0.0375em 0.0375em 0.0675em 0 rgba(5, 5, 5, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
}

.neu-button::after {
  content: "";
  position: absolute;
  z-index: 0;
  width: calc(100% + 0.3em);
  height: calc(100% + 0.3em);
  top: -0.15em;
  left: -0.15em;
  background: linear-gradient(
    -135deg,
    rgba(5, 5, 5, 0.5),
    transparent 20%,
    transparent 100%
  );
  filter: blur(0.0125em);
  opacity: 0.25;
  mix-blend-mode: multiply;
}

.neu-button-outer {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
  transition: box-shadow 300ms ease;
  will-change: box-shadow;
  box-shadow:
    0 0.05em 0.05em -0.01em rgba(5, 5, 5, 1),
    0 0.01em 0.01em -0.01em rgba(5, 5, 5, 0.5),
    0.15em 0.3em 0.1em -0.01em rgba(5, 5, 5, 0.25);
  display: flex;
  align-items: center;
  justify-content: center;
}

.neu-button:hover:not(:disabled) .neu-button-outer {
  box-shadow:
    0 0 0 0 rgba(5, 5, 5, 1),
    0 0 0 0 rgba(5, 5, 5, 0.5),
    0 0 0 0 rgba(5, 5, 5, 0.25);
}

.neu-button-inner {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(
    160deg,
    hsl(220deg 20% 95%) 40%,
    hsl(220deg 20% 85%) 70%
  );
  transition:
    box-shadow 300ms ease,
    clip-path 250ms ease,
    background-image 250ms ease,
    transform 250ms ease;
  will-change: box-shadow, clip-path, background-image, transform;
  overflow: clip;
  clip-path: inset(0 0 0 0);
  box-shadow:
    0 0 0 0 inset rgba(5, 5, 5, 0.1),
    -0.05em -0.05em 0.05em 0 inset rgba(5, 5, 5, 0.25),
    0 0 0 0 inset rgba(5, 5, 5, 0.1),
    0 0 0.05em 0.2em inset rgba(255, 255, 255, 0.25),
    0.025em 0.05em 0.1em 0 inset rgba(255, 255, 255, 1),
    0.12em 0.12em 0.12em inset rgba(255, 255, 255, 0.25),
    -0.075em -0.25em 0.25em 0.1em inset rgba(5, 5, 5, 0.25);
  display: flex;
  align-items: center;
  justify-content: center;
}

.neu-button:hover:not(:disabled) .neu-button-inner {
  clip-path: inset(
    clamp(1px, 0.0625em, 2px) clamp(1px, 0.0625em, 2px)
      clamp(1px, 0.0625em, 2px) clamp(1px, 0.0625em, 2px)
  );
  box-shadow:
    0.1em 0.15em 0.05em 0 inset rgba(5, 5, 5, 0.75),
    -0.025em -0.03em 0.05em 0.025em inset rgba(5, 5, 5, 0.5),
    0.25em 0.25em 0.2em 0 inset rgba(5, 5, 5, 0.5),
    0 0 0.05em 0.5em inset rgba(255, 255, 255, 0.15),
    0 0 0 0 inset rgba(255, 255, 255, 1),
    0.12em 0.12em 0.12em inset rgba(255, 255, 255, 0.25),
    -0.075em -0.12em 0.2em 0.1em inset rgba(5, 5, 5, 0.25);
}

.neu-button:active:not(:disabled) .neu-button-inner {
  transform: scale(0.975);
}

.neu-button:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

.neu-button:disabled .neu-button-inner {
  background-image: linear-gradient(
    160deg,
    hsl(220deg 15% 85%) 40%,
    hsl(220deg 15% 75%) 70%
  );
}

/* Primary Button (Save) */
.neu-button.primary .neu-button-inner {
  background-image: linear-gradient(
    160deg,
    hsl(var(--neu-accent-hue) 70% 70%) 40%,
    hsl(var(--neu-accent-hue) 70% 50%) 70%
  );
}

.neu-button.primary:disabled .neu-button-inner {
  background-image: linear-gradient(
    160deg,
    hsl(220deg 15% 75%) 40%,
    hsl(220deg 15% 65%) 70%
  );
}

/* Button Label */
.neu-button-label {
  font-size: 0.75rem;
  font-weight: 500;
  color: hsl(var(--neu-hue) 20% 40%);
  margin-bottom: 0.5rem;
  text-align: center;
  line-height: 1.2;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* Button Icon */
.neu-button-icon {
  width: 1rem;
  height: 1rem;
  position: relative;
  z-index: 4;
  stroke: #333;
  fill: none;
  transition: transform 250ms ease;
  will-change: transform;
  filter: drop-shadow(rgba(0, 0, 0, 0.1) 0 0 0.1em);
}

.neu-button.primary .neu-button-icon {
  stroke: #fff;
  fill: none;
}

.neu-button:hover:not(:disabled) .neu-button-icon {
  transform: scale(0.975);
}

.neu-button:disabled .neu-button-icon {
  stroke: #777;
  fill: none;
  opacity: 0.6;
}

/* Loading Spinner */
.neu-spinner {
  width: 1rem;
  height: 1rem;
  border: 2px solid;
  border-color: rgba(25, 25, 25, 0.3) rgba(25, 25, 25, 0.3) rgba(25, 25, 25, 0.3) rgba(25, 25, 25, 1);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  position: relative;
  z-index: 4;
}

.neu-button.primary .neu-spinner {
  border-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.3) white;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Responsive sizing */
@media (max-width: 640px) {
  .combine-switch {
    --width: 3.5rem;
  }
  
  .combine-mode-label span {
    font-size: 0.625rem;
    margin-bottom: 0.375rem;
  }
  
  .combine-mode-container {
    height: 2.5rem;
  }
  
  .neu-button-container {
    height: 2.5rem;
  }
  
  .neu-button {
    width: 3rem;
    height: 1.4rem;
  }
  
  .neu-button-label {
    font-size: 0.625rem;
    margin-bottom: 0.375rem;
  }
  
  .neu-button-icon,
  .neu-spinner {
    width: 0.875rem;
    height: 0.875rem;
  }
}
